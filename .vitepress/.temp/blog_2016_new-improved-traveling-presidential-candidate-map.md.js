import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const __pageData = JSON.parse(`{"title":"New, Improved Traveling Presidential Candidate Map","description":"Many years ago, when this website was still young, I created a map of all the ZIP codes in the U.S. in numeric order and then wondered about the shortest path through all of them. I dubbed that The Traveling Presidential Candidate Map. Here is an improved version that's interactive and much more efficient than the old one.","frontmatter":{"title":"New, Improved Traveling Presidential Candidate Map","description":"Many years ago, when this website was still young, I created a map of all the ZIP codes in the U.S. in numeric order and then wondered about the shortest path through all of them. I dubbed that The Traveling Presidential Candidate Map. Here is an improved version that's interactive and much more efficient than the old one.","date":"2016-07-04T20:49:45.000Z","tags":"ZIPScribble Maps","featuredImage":"https://media.eagereyes.org/wp-content/uploads/2012/01/ziptpcmap-teaser.png","outline":false},"headers":[],"relativePath":"blog/2016/new-improved-traveling-presidential-candidate-map.md","filePath":"blog/2016/new-improved-traveling-presidential-candidate-map.md"}`);
const _sfc_main = { name: "blog/2016/new-improved-traveling-presidential-candidate-map.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><p align="center"><img src="https://media.eagereyes.org/wp-content/uploads/2012/01/ziptpcmap-teaser.png" width="825" height="510"></p><h1 id="new-improved-traveling-presidential-candidate-map" tabindex="-1">New, Improved Traveling Presidential Candidate Map <a class="header-anchor" href="#new-improved-traveling-presidential-candidate-map" aria-label="Permalink to &quot;New, Improved Traveling Presidential Candidate Map&quot;">​</a></h1><p>Many years ago, when this website was still young, I created <a href="/zipscribble-maps/united-states">a map of all the ZIP codes in the U.S. in numeric order</a> and then wondered about the shortest path through all of them. I dubbed that <a href="/zipscribble-maps/travelling-presidential-candidate-map"><em>The Traveling Presidential Candidate Map</em></a>. Here is an improved version that&#39;s interactive and much more efficient than the old one.</p><p>Finding the shortest path through a set of points is called the <em><a href="https://en.wikipedia.org/wiki/Travelling_salesman_problem">Traveling Salesman Problem</a></em> (hence the pun). There are many applications, like finding the fastest way of moving a robot arm between many different positions where it needs to do work, or laying out traces on a printed circuit board.</p><p>Despite some major advances in the last 15 or so years, finding the optimal path for a large number of points is still a challenge. And the Traveling Presidential Candidate (TPC) Map, with its 37,284 points, is among them.</p><p><a href="/zipscribble-maps/travelling-presidential-candidate-map">In my first attempt</a>, I went with a simple algorithm that I had come up with myself that based the tour on a Hilbert curve. I found a claim that such an attempt would lead to a path that was only about &quot;75% optimal&quot; – presumably meaning it was 25% longer than optimal. That was good enough for my purposes, though it <a href="http://mat.tepper.cmu.edu/blog/?p=8376">was recently criticized</a> by somebody who seems to know what he&#39;s talking about.</p><p>So with the help of two very prominent researchers in the field of operations research, I&#39;ve been able to improve the solution to a point that is way beyond what is reasonable given the triviality of this endeavor. While the old tour was about 18% longer than the theoretical minimum, the new one is now less than 0.006% longer. This is based on an estimate of the minimum length generated by the state-of-the-art <a href="http://www.math.uwaterloo.ca/tsp/concorde/index.html">Concorde</a> program. Its author, <a href="http://www.math.uwaterloo.ca/~bico/">William J. Cook</a>, graciously ran it for me. This lower bound is not exact, so it might be longer.</p><p>The actual tour was created by a program named <a href="http://webhotel4.ruc.dk/~keld/research/LKH/">LKH</a>, and again the actual author, <a href="http://webhotel4.ruc.dk/~keld/">Keld Helsgaun</a>, configured and ran it (getting these optimization programs to work as best as possible is far from trivial).</p><p>It is possible that running both programs for longer would yield both a larger lower bound and a better tour. Though given that they&#39;re only 0.006% apart, it really makes very little difference. In physical distance, the tour is 345,873km or 214,916mi long (that&#39;s as-the-campaign-helicopter-flies). The theoretical optimal tour is 19.5km or just over 12mi shorter.</p><p>I have added the new TPC map to the <a href="/zipscribble-maps/interactive-zipscribble-map">interactive ZIPScribble maps page</a> for your enjoyment. On the way, I rewrote that map to be based on a new maps backend and fixed a few issues. I&#39;m still working on updating the individual country pages I made many years ago as well, but more on that later.</p><p>The code for the interactive map and the data files for the TPC map are <a href="https://github.com/eagereyes/zipscribble">available in a github repository</a>. In particular, <a href="https://github.com/eagereyes/zipscribble/blob/master/ZIPTPCMap/USTPCmap.csv">this file</a> contains the tour in easily-digested CSV format.</p><p><em>Posted by <a href="/about">Robert Kosara</a> on July 04, 2016</em></p><aside class="comments"><hr><h2 id="comments" tabindex="-1">Comments <a class="header-anchor" href="#comments" aria-label="Permalink to &quot;Comments&quot;">​</a></h2><p><a href="http://3danim8.wordpress.com/" rel="nofollow noopener" target="_blank">3danim8 (aka Ken Black)</a> says…</p><blockquote><p>Hi Robert,</p><p>Very nice work and thanks very much for sharing! You have achieved a very impressive result.</p><p>Are you willing to share the data set that was created by LKH to produce the The Traveling Presidential Candidate Map? I&#39;d be very interested in seeing and working with this file.</p><p>I first encountered the traveling salesman problem in 1984 or so. Ever since then, I have been fascinated by the computational difficulties of approximating the optimal solution.</p><p>Thanks,</p><p>Ken</p></blockquote><p><a href="/about" rel="nofollow noopener" target="_blank">Robert Kosara</a> says…</p><blockquote><p>Yes, they&#39;re available! The repository was linked from the interactive map page, but not from here. I&#39;ve added a paragraph at the end above with the links.</p></blockquote></aside></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("blog/2016/new-improved-traveling-presidential-candidate-map.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const newImprovedTravelingPresidentialCandidateMap = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  newImprovedTravelingPresidentialCandidateMap as default
};

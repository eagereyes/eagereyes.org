import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const __pageData = JSON.parse('{"title":"AsbruView: Capturing Complex, Time-oriented Plans – Beyond Flow-Charts","description":"Flow charts are one of the standard means of representing actions or algorithms in many domains. However, applying flow charts in dynamically changing environments, like clinical treatment planning, reveals their limitations. Flow charts do not include the temporal dimension in their design, do not allow complex paths through many components, and scale very badly. These are only some of the requirements for a means of communicating clinical therapy plans. As an alternative, a plan-representation language called Asbru was designed, which overcomes all the limitations of flow charts. It is, however, impossible for a domain expert to work with Asbru directly. Therefore, a visualisation called AsbruView is presented here, which uses three-dimensional diagrams and metaphors — running tracks and traffic signs — to make the parts of Asbru easily understandable and usable. Even very complex clinical plans are easy to understand with AsbruView.","frontmatter":{"title":"AsbruView: Capturing Complex, Time-oriented Plans – Beyond Flow-Charts","description":"Flow charts are one of the standard means of representing actions or algorithms in many domains. However, applying flow charts in dynamically changing environments, like clinical treatment planning, reveals their limitations. Flow charts do not include the temporal dimension in their design, do not allow complex paths through many components, and scale very badly. These are only some of the requirements for a means of communicating clinical therapy plans. As an alternative, a plan-representation language called Asbru was designed, which overcomes all the limitations of flow charts. It is, however, impossible for a domain expert to work with Asbru directly. Therefore, a visualisation called AsbruView is presented here, which uses three-dimensional diagrams and metaphors — running tracks and traffic signs — to make the parts of Asbru easily understandable and usable. Even very complex clinical plans are easy to understand with AsbruView."},"headers":[],"relativePath":"publications/Kosara-DRR-2002.md","filePath":"publications/Kosara-DRR-2002.md"}');
const _sfc_main = { name: "publications/Kosara-DRR-2002.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="asbruview-capturing-complex-time-oriented-plans-–-beyond-flow-charts" tabindex="-1">AsbruView: Capturing Complex, Time-oriented Plans – Beyond Flow-Charts <a class="header-anchor" href="#asbruview-capturing-complex-time-oriented-plans-–-beyond-flow-charts" aria-label="Permalink to &quot;AsbruView: Capturing Complex, Time-oriented Plans – Beyond Flow-Charts&quot;">​</a></h1><blockquote><p><em>Flow charts are one of the standard means of representing actions or algorithms in many domains. However, applying flow charts in dynamically changing environments, like clinical treatment planning, reveals their limitations. Flow charts do not include the temporal dimension in their design, do not allow complex paths through many components, and scale very badly. These are only some of the requirements for a means of communicating clinical therapy plans. As an alternative, a plan-representation language called Asbru was designed, which overcomes all the limitations of flow charts. It is, however, impossible for a domain expert to work with Asbru directly. Therefore, a visualisation called AsbruView is presented here, which uses three-dimensional diagrams and metaphors — running tracks and traffic signs — to make the parts of Asbru easily understandable and usable. Even very complex clinical plans are easy to understand with AsbruView.</em></p></blockquote><p>Robert Kosara, Silvia Miksch, Yuval Shahar, and Peter Johnson, AsbruView: Capturing Complex, Time-oriented Plans – Beyond Flow-Charts, in Anderson, Meyer, Olivier, <em>Diagrammatic Representation and Reasoning</em>, 2002.</p><div class="language-bibtex"><button title="Copy Code" class="copy"></button><span class="lang">bibtex</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">@</span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">inbook</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">Kosara:DRR:2002</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">year</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">2002</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">title</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">AsbruView: Capturing Complex, Time-oriented Plans – Beyond Flow-Charts</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">author</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">Robert Kosara and Silvia Miksch and Yuval Shahar and Peter Johnson</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">venue</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">Diagrammatic Representation and Reasoning</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">editor</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">Anderson, Meyer, Olivier</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">abstract</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">Flow charts are one of the standard means of representing actions or algorithms in many domains. However, applying flow charts in dynamically changing environments, like clinical treatment planning, reveals their limitations. Flow charts do not include the temporal dimension in their design, do not allow complex paths through many components, and scale very badly. These are only some of the requirements for a means of communicating clinical therapy plans. As an alternative, a plan-representation language called Asbru was designed, which overcomes all the limitations of flow charts. It is, however, impossible for a domain expert to work with Asbru directly. Therefore, a visualisation called AsbruView is presented here, which uses three-dimensional diagrams and metaphors — running tracks and traffic signs — to make the parts of Asbru easily understandable and usable. Even very complex clinical plans are easy to understand with AsbruView.</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span></span></code></pre></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("publications/Kosara-DRR-2002.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const KosaraDRR2002 = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  KosaraDRR2002 as default
};

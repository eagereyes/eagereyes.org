import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const __pageData = JSON.parse('{"title":"Meet @InfoVis_Ebooks, Your Source for Random InfoVis Paper Snippets","description":"Are you looking for inspiration while writing a paper or grant? Do you feel that there is a lack of information visualization content on Twitter? Is your timeline too empty and slow? Follow @InfoVis_Ebooks, a Twitter account that posts random pieces of text from infovis papers.","frontmatter":{"title":"Meet @InfoVis_Ebooks, Your Source for Random InfoVis Paper Snippets","description":"Are you looking for inspiration while writing a paper or grant? Do you feel that there is a lack of information visualization content on Twitter? Is your timeline too empty and slow? Follow @InfoVis_Ebooks, a Twitter account that posts random pieces of text from infovis papers.","date":"2013-04-21T20:21:09.000Z","tags":"service","featuredImage":"https://media.eagereyes.org/wp-content/uploads/2013/04/infovis-template.png"},"headers":[],"relativePath":"blog/2013/infovis_ebooks.md","filePath":"blog/2013/infovis_ebooks.md"}');
const _sfc_main = { name: "blog/2013/infovis_ebooks.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="meet-infovis-ebooks-your-source-for-random-infovis-paper-snippets" tabindex="-1">Meet @InfoVis_Ebooks, Your Source for Random InfoVis Paper Snippets <a class="header-anchor" href="#meet-infovis-ebooks-your-source-for-random-infovis-paper-snippets" aria-label="Permalink to &quot;Meet @InfoVis_Ebooks, Your Source for Random InfoVis Paper Snippets&quot;">​</a></h1><p>Are you looking for inspiration while writing a paper or grant? Do you feel that there is a lack of information visualization content on Twitter? Is your timeline too empty and slow? Follow @InfoVis_Ebooks, a Twitter account that posts random pieces of text from infovis papers.</p><h2 id="related-work" tabindex="-1">Related Work <a class="header-anchor" href="#related-work" aria-label="Permalink to &quot;Related Work&quot;">​</a></h2><p>Accounts that tweet more or less random snippets of text have become a genre in themselves. If you&#39;ve spent any time on Twitter, you&#39;ve probably seen the one that started it all: <a href="https://twitter.com/Horse_ebooks">Horse ebooks</a>. Despite <a href="http://en.wikipedia.org/wiki/Horse_ebooks">being a spam account</a>, it has almost 170,000 followers who presumably enjoy its random and often nonsensical tweets. Following in its footsteps are more or less serious accounts, like <a href="https://twitter.com/bogost_ebooks">Bogost ebooks</a>, which tweets pieces of <a href="http://www.bogost.com">Ian Bogost</a>&#39;s writing.</p><h2 id="materials-and-method" tabindex="-1">Materials and Method <a class="header-anchor" href="#materials-and-method" aria-label="Permalink to &quot;Materials and Method&quot;">​</a></h2><p>InfoVis Ebooks takes a random piece of text from a random paper in its repository and tweets it. It has read all of last year&#39;s InfoVis papers, and is now getting started with the VAST proceedings. After that, it will start reading infovis papers published in last year&#39;s EuroVis and CHI conferences, and then work its way back to previous years.</p><p>Each tweet contains a reference to the paper the snippet is from. For InfoVis, VAST, and CHI, these are <a href="http://en.wikipedia.org/wiki/Digital_object_identifier">DOIs</a> rather than links. Links get long and distracting, whereas DOIs are much easier to tune out in a tweet. If you want to see the paper, google the DOI string (keep the &quot;doi:&quot; part). You can also take everything but the &quot;doi:&quot; and append it to <a href="http://dx.doi.org/" target="_blank" rel="noreferrer">http://dx.doi.org/</a> to be redirected to the paper page. For other sources, I will probably have to use links.</p><p>As the name suggests, InfoVis Ebooks is about infovis papers. If you want to do the same for SciVis, HCI, or anything else, <a href="https://github.com/eagereyes/InfoVis_Ebooks">the code is available on github</a>.</p><h2 id="results" tabindex="-1">Results <a class="header-anchor" href="#results" aria-label="Permalink to &quot;Results&quot;">​</a></h2><p>InfoVis Ebooks currently tweets roughly once every two hours. The time is randomized, and there can be much more (and less) than two hours between tweets; it all depends on how chatty the bot is feeling.</p><p>The results are sometimes nonsensical, sometimes funny, and sometimes pieces of code or formulas. Despite the limited set of papers right now, there is a lot of variety in the tweets.</p><h2 id="conclusions-and-future-work" tabindex="-1">Conclusions and Future Work <a class="header-anchor" href="#conclusions-and-future-work" aria-label="Permalink to &quot;Conclusions and Future Work&quot;">​</a></h2><p>This is clearly only the start, and further research is needed. The number of sources needs to be expanded, which is a slow, manual process. The goal is to eventually not only include papers (and maybe posters), but also have the bot follow visualization blogs.</p><p>In addition to the text, the document database knows the venue and year a paper was published. The idea is to be able to focus the tweets on papers from a particular venue (e.g., during a conference, only tweet from papers that were published in earlier years at that same place), or restrict to a time period (vintage papers from the early 90&#39;s?).</p><p>The bot will be continue to get tweaked to create more interesting and entertaining tweets. It is currently based on some very simple heuristics and rules for what makes a snippet acceptable, but I plan on refining those over time. Also, a user study.</p><p><em>Posted by <a href="/about">Robert Kosara</a> on April 21, 2013</em></p><aside class="comments"><hr><h2 id="comments" tabindex="-1">Comments <a class="header-anchor" href="#comments" aria-label="Permalink to &quot;Comments&quot;">​</a></h2><p>Xiaoyu Wang says…</p><blockquote><p>Great idea, Robert! Would like to contribute!</p></blockquote></aside></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("blog/2013/infovis_ebooks.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const infovis_ebooks = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  infovis_ebooks as default
};

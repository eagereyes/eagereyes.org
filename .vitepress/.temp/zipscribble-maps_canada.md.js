import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const __pageData = JSON.parse('{"title":"ZIPScribble Map: Canada","description":"","frontmatter":{"title":"ZIPScribble Map: Canada","description":"","date":"2007-01-07T21:45:22.000Z","tags":null,"featuredImage":null,"outline":false},"headers":[],"relativePath":"zipscribble-maps/canada.md","filePath":"zipscribble-maps/canada.md"}');
const _sfc_main = { name: "zipscribble-maps/canada.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="zipscribble-map-canada" tabindex="-1">ZIPScribble Map: Canada <a class="header-anchor" href="#zipscribble-map-canada" aria-label="Permalink to &quot;ZIPScribble Map: Canada&quot;">â€‹</a></h1><p align="center"><img class="aligncenter" title="ZIPScribbleMap Canada" src="https://media.eagereyes.org/media/attachments/ZIPScribbleMaps/ZIPScribbleMap-Canada-color-names-borders.png" alt="ZIPScribbleMap Canada" width="436" height="559" border="0"></p><p><a href="http://en.wikipedia.org/wiki/Canada">Canada</a> is the second-largest country in the world in terms of area, and is also extremely sparsely populated. The map shows the concentration of cities along the border with the contiguous US, and the vast areas that seem to be effectively empty.</p><p>See also <a href="/zipscribble-maps/interactive-zipscribble-map#CA">the interactive version</a>!</p><table width="80%" border="0" align="center"><tbody><tr><td align="center"><strong>PNG</strong></td><td align="center"><a href="https://media.eagereyes.org/media/attachments/ZIPScribbleMaps/ZIPScribbleMap-Canada.png" target="_blank" rel="slb_off">Black/White</a></td><td align="center"><a href="https://media.eagereyes.org/media/attachments/ZIPScribbleMaps/ZIPScribbleMap-Canada-color.png" target="_blank" rel="slb_off">Color</a></td><td align="center"><a href="https://media.eagereyes.org/media/attachments/ZIPScribbleMaps/ZIPScribbleMap-Canada-color-names.png" target="_blank" rel="slb_off">Color, Names</a></td><td align="center"><a href="https://media.eagereyes.org/media/attachments/ZIPScribbleMaps/ZIPScribbleMap-Canada-color-names-borders.png" target="_blank" rel="slb_off">Color, Names, Borders</a></td></tr><tr><td align="center"><strong>PDF</strong></td><td align="center"><a href="https://media.eagereyes.org/media/attachments/ZIPScribbleMaps/ZIPScribbleMap-Canada.pdf" target="_blank">Black/White</a></td><td align="center"><a href="https://media.eagereyes.org/media/attachments/ZIPScribbleMaps/ZIPScribbleMap-Canada-color.pdf" target="_blank">Color </a></td><td align="center"><a href="https://media.eagereyes.org/media/attachments/ZIPScribbleMaps/ZIPScribbleMap-Canada-color-names.pdf" target="_blank">Color, Names</a></td><td align="center"><a href="https://media.eagereyes.org/media/attachments/ZIPScribbleMaps/ZIPScribbleMap-Canada-color-names-borders.pdf" target="_blank">Color, Names, Borders</a></td></tr></tbody></table><p><em>Posted by <a href="/about">Robert Kosara</a> on January 07, 2007</em></p><aside class="comments"><hr><h2 id="comments" tabindex="-1">Comments <a class="header-anchor" href="#comments" aria-label="Permalink to &quot;Comments&quot;">â€‹</a></h2><p><a href="http://www.hikingmike.com" rel="nofollow noopener" target="_blank">hikingmike</a> saysâ€¦</p><blockquote><p>Wow it&#39;s even more stark than I expected, ha ðŸ˜ƒ</p></blockquote><p><a href="http://twitter.com/Kokabella" rel="nofollow noopener" target="_blank">Terry-Anne (@Kokabella)</a> saysâ€¦</p><blockquote><p>Wow, looks way more bare and isolated than it really is! Having grown up there, seeing this scribble map, makes me feel like maybe I lived in isolation and forgot about it!</p></blockquote></aside></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("zipscribble-maps/canada.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const canada = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  canada as default
};

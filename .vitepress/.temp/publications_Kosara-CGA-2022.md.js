import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const __pageData = JSON.parse('{"title":"More Than Meets the Eye: A Closer Look at Encodings in Visualization","description":"Encoding data visually is at the heart of visualization. We usually assume that encodings are read as specified (i.e., if a bar chart is drawn by the length of the bars based on the data, that is also how we read them). In this paper, we question this assumption and demonstrate that observed encodings often differ from the ones used to specify the visualization. The value of a chart also often comes from higher level derived encodings, and which encodings end up getting used also depends on the user’s task.","frontmatter":{"title":"More Than Meets the Eye: A Closer Look at Encodings in Visualization","description":"Encoding data visually is at the heart of visualization. We usually assume that encodings are read as specified (i.e., if a bar chart is drawn by the length of the bars based on the data, that is also how we read them). In this paper, we question this assumption and demonstrate that observed encodings often differ from the ones used to specify the visualization. The value of a chart also often comes from higher level derived encodings, and which encodings end up getting used also depends on the user’s task.","featuredImage":"https://media.eagereyes.org/wp-content/uploads/2022/04/Kosara-CGA-2022b.png"},"headers":[],"relativePath":"publications/Kosara-CGA-2022.md","filePath":"publications/Kosara-CGA-2022.md"}');
const _sfc_main = { name: "publications/Kosara-CGA-2022.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="more-than-meets-the-eye-a-closer-look-at-encodings-in-visualization" tabindex="-1">More Than Meets the Eye: A Closer Look at Encodings in Visualization <a class="header-anchor" href="#more-than-meets-the-eye-a-closer-look-at-encodings-in-visualization" aria-label="Permalink to &quot;More Than Meets the Eye: A Closer Look at Encodings in Visualization&quot;">​</a></h1><p align="center"><img src="https://media.eagereyes.org/wp-content/uploads/2022/04/Kosara-CGA-2022b.png"></p><blockquote><p><em>Encoding data visually is at the heart of visualization. We usually assume that encodings are read as specified (i.e., if a bar chart is drawn by the length of the bars based on the data, that is also how we read them). In this paper, we question this assumption and demonstrate that observed encodings often differ from the ones used to specify the visualization. The value of a chart also often comes from higher level derived encodings, and which encodings end up getting used also depends on the user’s task.</em></p></blockquote><p>Robert Kosara, <a href="https://media.eagereyes.org/papers/2022/Kosara-CGA-2022.pdf" target="_blank">More Than Meets the Eye: A Closer Look at Encodings in Visualization</a>, <em>Computer Graphics and Applications (CG&amp;A)</em>, vol. 42, no. 2, pp. 110-114, 2022. <a href="https://dx.doi.org/10.1109/MCG.2021.3138608" target="_new">DOI: 10.1109/MCG.2021.3138608</a></p><div class="language-bibtex"><button title="Copy Code" class="copy"></button><span class="lang">bibtex</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">@</span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">article</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">Kosara:CGA:2022</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">year</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">2022</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">title</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">More Than Meets the Eye: A Closer Look at Encodings in Visualization</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">author</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">Robert Kosara</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">venue</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">Computer Graphics and Applications (CG&amp;A)</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">volume</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">42</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">number</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">2</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">pages</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">110-114</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">doi</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">10.1109/MCG.2021.3138608</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">	</span><span style="${ssrRenderStyle({ "color": "#82AAFF" })}">abstract</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">Encoding data visually is at the heart of visualization. We usually assume that encodings are read as specified (i.e., if a bar chart is drawn by the length of the bars based on the data, that is also how we read them). In this paper, we question this assumption and demonstrate that observed encodings often differ from the ones used to specify the visualization. The value of a chart also often comes from higher level derived encodings, and which encodings end up getting used also depends on the user’s task.</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span></span></code></pre></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("publications/Kosara-CGA-2022.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const KosaraCGA2022 = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  KosaraCGA2022 as default
};
